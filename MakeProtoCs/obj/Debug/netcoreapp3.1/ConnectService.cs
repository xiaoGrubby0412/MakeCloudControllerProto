// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ConnectService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Baidu.Zion.Proto.Lib {

  /// <summary>Holder for reflection information generated from ConnectService.proto</summary>
  public static partial class ConnectServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for ConnectService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConnectServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRDb25uZWN0U2VydmljZS5wcm90bxIYY29tLmJhaWR1Lnppb24ucHJvdG8u",
            "bGliIqQBCgpEZXZpY2VJbmZvEhEKCWRldmljZV9pZBgBIAIoCRIWCg5jbGll",
            "bnRfdmVyc2lvbhgCIAEoCRISCgpvc192ZXJzaW9uGAMgASgJEhAKCHBsYXRm",
            "b3JtGAQgASgJEg8KB2NoYW5uZWwYBSABKAkSFQoFc3RhZ2UYBiABKAk6Bm9u",
            "bGluZRIdChVjbGllbnRfaG90Zml4X3ZlcnNpb24YByABKAkiLQoITWV0YUlu",
            "Zm8SEQoJdGltZXN0YW1wGAEgASgEEg4KBnJlcV9pZBgCIAEoCSJ4CghUYXNr",
            "SW5mbxIRCgl0YXNrX25hbWUYASACKAkSEwoLY29uZmlnX25hbWUYAiACKAkS",
            "EQoJdGFza190eXBlGAMgAigFEhMKC3Rhc2tfc3RhdHVzGAQgAigJEgsKA3Vy",
            "bBgFIAEoCRIPCgdjb250ZW50GAYgASgJIn8KC1Rhc2tSZXF1ZXN0EjkKC2Rl",
            "dmljZV9pbmZvGAEgAigLMiQuY29tLmJhaWR1Lnppb24ucHJvdG8ubGliLkRl",
            "dmljZUluZm8SNQoJbWV0YV9pbmZvGAIgASgLMiIuY29tLmJhaWR1Lnppb24u",
            "cHJvdG8ubGliLk1ldGFJbmZvImUKDFRhc2tSZXNwb25zZRIOCgZyZXN1bHQY",
            "ASACKAkSDgoGcmVzX2lkGAIgAigJEjUKCXRhc2tfaW5mbxgDIAEoCzIiLmNv",
            "bS5iYWlkdS56aW9uLnByb3RvLmxpYi5UYXNrSW5mbzJwCg5aaW9uUnBjU2Vy",
            "dmljZRJeCgdDb25uZWN0EiUuY29tLmJhaWR1Lnppb24ucHJvdG8ubGliLlRh",
            "c2tSZXF1ZXN0GiYuY29tLmJhaWR1Lnppb24ucHJvdG8ubGliLlRhc2tSZXNw",
            "b25zZSIAKAEwAQ=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Baidu.Zion.Proto.Lib.DeviceInfo), global::Com.Baidu.Zion.Proto.Lib.DeviceInfo.Parser, new[]{ "DeviceId", "ClientVersion", "OsVersion", "Platform", "Channel", "Stage", "ClientHotfixVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Baidu.Zion.Proto.Lib.MetaInfo), global::Com.Baidu.Zion.Proto.Lib.MetaInfo.Parser, new[]{ "Timestamp", "ReqId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Baidu.Zion.Proto.Lib.TaskInfo), global::Com.Baidu.Zion.Proto.Lib.TaskInfo.Parser, new[]{ "TaskName", "ConfigName", "TaskType", "TaskStatus", "Url", "Content" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Baidu.Zion.Proto.Lib.TaskRequest), global::Com.Baidu.Zion.Proto.Lib.TaskRequest.Parser, new[]{ "DeviceInfo", "MetaInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Baidu.Zion.Proto.Lib.TaskResponse), global::Com.Baidu.Zion.Proto.Lib.TaskResponse.Parser, new[]{ "Result", "ResId", "TaskInfo" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// request device info
  /// </summary>
  public sealed partial class DeviceInfo : pb::IMessage<DeviceInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DeviceInfo> _parser = new pb::MessageParser<DeviceInfo>(() => new DeviceInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Baidu.Zion.Proto.Lib.ConnectServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceInfo(DeviceInfo other) : this() {
      deviceId_ = other.deviceId_;
      clientVersion_ = other.clientVersion_;
      osVersion_ = other.osVersion_;
      platform_ = other.platform_;
      channel_ = other.channel_;
      stage_ = other.stage_;
      clientHotfixVersion_ = other.clientHotfixVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceInfo Clone() {
      return new DeviceInfo(this);
    }

    /// <summary>Field number for the "device_id" field.</summary>
    public const int DeviceIdFieldNumber = 1;
    private readonly static string DeviceIdDefaultValue = "";

    private string deviceId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_ ?? DeviceIdDefaultValue; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "device_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasDeviceId {
      get { return deviceId_ != null; }
    }
    /// <summary>Clears the value of the "device_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearDeviceId() {
      deviceId_ = null;
    }

    /// <summary>Field number for the "client_version" field.</summary>
    public const int ClientVersionFieldNumber = 2;
    private readonly static string ClientVersionDefaultValue = "";

    private string clientVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientVersion {
      get { return clientVersion_ ?? ClientVersionDefaultValue; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClientVersion {
      get { return clientVersion_ != null; }
    }
    /// <summary>Clears the value of the "client_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClientVersion() {
      clientVersion_ = null;
    }

    /// <summary>Field number for the "os_version" field.</summary>
    public const int OsVersionFieldNumber = 3;
    private readonly static string OsVersionDefaultValue = "";

    private string osVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OsVersion {
      get { return osVersion_ ?? OsVersionDefaultValue; }
      set {
        osVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "os_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasOsVersion {
      get { return osVersion_ != null; }
    }
    /// <summary>Clears the value of the "os_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOsVersion() {
      osVersion_ = null;
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 4;
    private readonly static string PlatformDefaultValue = "";

    private string platform_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_ ?? PlatformDefaultValue; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "platform" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasPlatform {
      get { return platform_ != null; }
    }
    /// <summary>Clears the value of the "platform" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPlatform() {
      platform_ = null;
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 5;
    private readonly static string ChannelDefaultValue = "";

    private string channel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_ ?? ChannelDefaultValue; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "channel" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasChannel {
      get { return channel_ != null; }
    }
    /// <summary>Clears the value of the "channel" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearChannel() {
      channel_ = null;
    }

    /// <summary>Field number for the "stage" field.</summary>
    public const int StageFieldNumber = 6;
    private readonly static string StageDefaultValue = global::System.Text.Encoding.UTF8.GetString(global::System.Convert.FromBase64String("b25saW5l"), 0, 6);

    private string stage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Stage {
      get { return stage_ ?? StageDefaultValue; }
      set {
        stage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "stage" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasStage {
      get { return stage_ != null; }
    }
    /// <summary>Clears the value of the "stage" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStage() {
      stage_ = null;
    }

    /// <summary>Field number for the "client_hotfix_version" field.</summary>
    public const int ClientHotfixVersionFieldNumber = 7;
    private readonly static string ClientHotfixVersionDefaultValue = "";

    private string clientHotfixVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientHotfixVersion {
      get { return clientHotfixVersion_ ?? ClientHotfixVersionDefaultValue; }
      set {
        clientHotfixVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "client_hotfix_version" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasClientHotfixVersion {
      get { return clientHotfixVersion_ != null; }
    }
    /// <summary>Clears the value of the "client_hotfix_version" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearClientHotfixVersion() {
      clientHotfixVersion_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceId != other.DeviceId) return false;
      if (ClientVersion != other.ClientVersion) return false;
      if (OsVersion != other.OsVersion) return false;
      if (Platform != other.Platform) return false;
      if (Channel != other.Channel) return false;
      if (Stage != other.Stage) return false;
      if (ClientHotfixVersion != other.ClientHotfixVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasDeviceId) hash ^= DeviceId.GetHashCode();
      if (HasClientVersion) hash ^= ClientVersion.GetHashCode();
      if (HasOsVersion) hash ^= OsVersion.GetHashCode();
      if (HasPlatform) hash ^= Platform.GetHashCode();
      if (HasChannel) hash ^= Channel.GetHashCode();
      if (HasStage) hash ^= Stage.GetHashCode();
      if (HasClientHotfixVersion) hash ^= ClientHotfixVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasDeviceId) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (HasClientVersion) {
        output.WriteRawTag(18);
        output.WriteString(ClientVersion);
      }
      if (HasOsVersion) {
        output.WriteRawTag(26);
        output.WriteString(OsVersion);
      }
      if (HasPlatform) {
        output.WriteRawTag(34);
        output.WriteString(Platform);
      }
      if (HasChannel) {
        output.WriteRawTag(42);
        output.WriteString(Channel);
      }
      if (HasStage) {
        output.WriteRawTag(50);
        output.WriteString(Stage);
      }
      if (HasClientHotfixVersion) {
        output.WriteRawTag(58);
        output.WriteString(ClientHotfixVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasDeviceId) {
        output.WriteRawTag(10);
        output.WriteString(DeviceId);
      }
      if (HasClientVersion) {
        output.WriteRawTag(18);
        output.WriteString(ClientVersion);
      }
      if (HasOsVersion) {
        output.WriteRawTag(26);
        output.WriteString(OsVersion);
      }
      if (HasPlatform) {
        output.WriteRawTag(34);
        output.WriteString(Platform);
      }
      if (HasChannel) {
        output.WriteRawTag(42);
        output.WriteString(Channel);
      }
      if (HasStage) {
        output.WriteRawTag(50);
        output.WriteString(Stage);
      }
      if (HasClientHotfixVersion) {
        output.WriteRawTag(58);
        output.WriteString(ClientHotfixVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasDeviceId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (HasClientVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (HasOsVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OsVersion);
      }
      if (HasPlatform) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (HasChannel) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (HasStage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Stage);
      }
      if (HasClientHotfixVersion) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientHotfixVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasDeviceId) {
        DeviceId = other.DeviceId;
      }
      if (other.HasClientVersion) {
        ClientVersion = other.ClientVersion;
      }
      if (other.HasOsVersion) {
        OsVersion = other.OsVersion;
      }
      if (other.HasPlatform) {
        Platform = other.Platform;
      }
      if (other.HasChannel) {
        Channel = other.Channel;
      }
      if (other.HasStage) {
        Stage = other.Stage;
      }
      if (other.HasClientHotfixVersion) {
        ClientHotfixVersion = other.ClientHotfixVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 18: {
            ClientVersion = input.ReadString();
            break;
          }
          case 26: {
            OsVersion = input.ReadString();
            break;
          }
          case 34: {
            Platform = input.ReadString();
            break;
          }
          case 42: {
            Channel = input.ReadString();
            break;
          }
          case 50: {
            Stage = input.ReadString();
            break;
          }
          case 58: {
            ClientHotfixVersion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            DeviceId = input.ReadString();
            break;
          }
          case 18: {
            ClientVersion = input.ReadString();
            break;
          }
          case 26: {
            OsVersion = input.ReadString();
            break;
          }
          case 34: {
            Platform = input.ReadString();
            break;
          }
          case 42: {
            Channel = input.ReadString();
            break;
          }
          case 50: {
            Stage = input.ReadString();
            break;
          }
          case 58: {
            ClientHotfixVersion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// request meta info
  /// </summary>
  public sealed partial class MetaInfo : pb::IMessage<MetaInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MetaInfo> _parser = new pb::MessageParser<MetaInfo>(() => new MetaInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MetaInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Baidu.Zion.Proto.Lib.ConnectServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetaInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetaInfo(MetaInfo other) : this() {
      _hasBits0 = other._hasBits0;
      timestamp_ = other.timestamp_;
      reqId_ = other.reqId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MetaInfo Clone() {
      return new MetaInfo(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private readonly static ulong TimestampDefaultValue = 0UL;

    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { if ((_hasBits0 & 1) != 0) { return timestamp_; } else { return TimestampDefaultValue; } }
      set {
        _hasBits0 |= 1;
        timestamp_ = value;
      }
    }
    /// <summary>Gets whether the "timestamp" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTimestamp {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "timestamp" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTimestamp() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "req_id" field.</summary>
    public const int ReqIdFieldNumber = 2;
    private readonly static string ReqIdDefaultValue = "";

    private string reqId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReqId {
      get { return reqId_ ?? ReqIdDefaultValue; }
      set {
        reqId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "req_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasReqId {
      get { return reqId_ != null; }
    }
    /// <summary>Clears the value of the "req_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReqId() {
      reqId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MetaInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MetaInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (ReqId != other.ReqId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTimestamp) hash ^= Timestamp.GetHashCode();
      if (HasReqId) hash ^= ReqId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTimestamp) {
        output.WriteRawTag(8);
        output.WriteUInt64(Timestamp);
      }
      if (HasReqId) {
        output.WriteRawTag(18);
        output.WriteString(ReqId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTimestamp) {
        output.WriteRawTag(8);
        output.WriteUInt64(Timestamp);
      }
      if (HasReqId) {
        output.WriteRawTag(18);
        output.WriteString(ReqId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTimestamp) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (HasReqId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReqId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MetaInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.HasReqId) {
        ReqId = other.ReqId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 18: {
            ReqId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 18: {
            ReqId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TaskInfo : pb::IMessage<TaskInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskInfo> _parser = new pb::MessageParser<TaskInfo>(() => new TaskInfo());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Baidu.Zion.Proto.Lib.ConnectServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskInfo(TaskInfo other) : this() {
      _hasBits0 = other._hasBits0;
      taskName_ = other.taskName_;
      configName_ = other.configName_;
      taskType_ = other.taskType_;
      taskStatus_ = other.taskStatus_;
      url_ = other.url_;
      content_ = other.content_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskInfo Clone() {
      return new TaskInfo(this);
    }

    /// <summary>Field number for the "task_name" field.</summary>
    public const int TaskNameFieldNumber = 1;
    private readonly static string TaskNameDefaultValue = "";

    private string taskName_;
    /// <summary>
    /// 云控任务编号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskName {
      get { return taskName_ ?? TaskNameDefaultValue; }
      set {
        taskName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "task_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTaskName {
      get { return taskName_ != null; }
    }
    /// <summary>Clears the value of the "task_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTaskName() {
      taskName_ = null;
    }

    /// <summary>Field number for the "config_name" field.</summary>
    public const int ConfigNameFieldNumber = 2;
    private readonly static string ConfigNameDefaultValue = "";

    private string configName_;
    /// <summary>
    /// 云控配置名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfigName {
      get { return configName_ ?? ConfigNameDefaultValue; }
      set {
        configName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "config_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasConfigName {
      get { return configName_ != null; }
    }
    /// <summary>Clears the value of the "config_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConfigName() {
      configName_ = null;
    }

    /// <summary>Field number for the "task_type" field.</summary>
    public const int TaskTypeFieldNumber = 3;
    private readonly static int TaskTypeDefaultValue = 0;

    private int taskType_;
    /// <summary>
    /// 0: 云控url；1：云控content
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaskType {
      get { if ((_hasBits0 & 1) != 0) { return taskType_; } else { return TaskTypeDefaultValue; } }
      set {
        _hasBits0 |= 1;
        taskType_ = value;
      }
    }
    /// <summary>Gets whether the "task_type" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTaskType {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "task_type" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTaskType() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "task_status" field.</summary>
    public const int TaskStatusFieldNumber = 4;
    private readonly static string TaskStatusDefaultValue = "";

    private string taskStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskStatus {
      get { return taskStatus_ ?? TaskStatusDefaultValue; }
      set {
        taskStatus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "task_status" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasTaskStatus {
      get { return taskStatus_ != null; }
    }
    /// <summary>Clears the value of the "task_status" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTaskStatus() {
      taskStatus_ = null;
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 5;
    private readonly static string UrlDefaultValue = "";

    private string url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_ ?? UrlDefaultValue; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "url" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasUrl {
      get { return url_ != null; }
    }
    /// <summary>Clears the value of the "url" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUrl() {
      url_ = null;
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 6;
    private readonly static string ContentDefaultValue = "";

    private string content_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_ ?? ContentDefaultValue; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "content" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasContent {
      get { return content_ != null; }
    }
    /// <summary>Clears the value of the "content" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskName != other.TaskName) return false;
      if (ConfigName != other.ConfigName) return false;
      if (TaskType != other.TaskType) return false;
      if (TaskStatus != other.TaskStatus) return false;
      if (Url != other.Url) return false;
      if (Content != other.Content) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasTaskName) hash ^= TaskName.GetHashCode();
      if (HasConfigName) hash ^= ConfigName.GetHashCode();
      if (HasTaskType) hash ^= TaskType.GetHashCode();
      if (HasTaskStatus) hash ^= TaskStatus.GetHashCode();
      if (HasUrl) hash ^= Url.GetHashCode();
      if (HasContent) hash ^= Content.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasTaskName) {
        output.WriteRawTag(10);
        output.WriteString(TaskName);
      }
      if (HasConfigName) {
        output.WriteRawTag(18);
        output.WriteString(ConfigName);
      }
      if (HasTaskType) {
        output.WriteRawTag(24);
        output.WriteInt32(TaskType);
      }
      if (HasTaskStatus) {
        output.WriteRawTag(34);
        output.WriteString(TaskStatus);
      }
      if (HasUrl) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      if (HasContent) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasTaskName) {
        output.WriteRawTag(10);
        output.WriteString(TaskName);
      }
      if (HasConfigName) {
        output.WriteRawTag(18);
        output.WriteString(ConfigName);
      }
      if (HasTaskType) {
        output.WriteRawTag(24);
        output.WriteInt32(TaskType);
      }
      if (HasTaskStatus) {
        output.WriteRawTag(34);
        output.WriteString(TaskStatus);
      }
      if (HasUrl) {
        output.WriteRawTag(42);
        output.WriteString(Url);
      }
      if (HasContent) {
        output.WriteRawTag(50);
        output.WriteString(Content);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasTaskName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskName);
      }
      if (HasConfigName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigName);
      }
      if (HasTaskType) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TaskType);
      }
      if (HasTaskStatus) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskStatus);
      }
      if (HasUrl) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (HasContent) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskInfo other) {
      if (other == null) {
        return;
      }
      if (other.HasTaskName) {
        TaskName = other.TaskName;
      }
      if (other.HasConfigName) {
        ConfigName = other.ConfigName;
      }
      if (other.HasTaskType) {
        TaskType = other.TaskType;
      }
      if (other.HasTaskStatus) {
        TaskStatus = other.TaskStatus;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskName = input.ReadString();
            break;
          }
          case 18: {
            ConfigName = input.ReadString();
            break;
          }
          case 24: {
            TaskType = input.ReadInt32();
            break;
          }
          case 34: {
            TaskStatus = input.ReadString();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TaskName = input.ReadString();
            break;
          }
          case 18: {
            ConfigName = input.ReadString();
            break;
          }
          case 24: {
            TaskType = input.ReadInt32();
            break;
          }
          case 34: {
            TaskStatus = input.ReadString();
            break;
          }
          case 42: {
            Url = input.ReadString();
            break;
          }
          case 50: {
            Content = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TaskRequest : pb::IMessage<TaskRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskRequest> _parser = new pb::MessageParser<TaskRequest>(() => new TaskRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Baidu.Zion.Proto.Lib.ConnectServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskRequest(TaskRequest other) : this() {
      deviceInfo_ = other.deviceInfo_ != null ? other.deviceInfo_.Clone() : null;
      metaInfo_ = other.metaInfo_ != null ? other.metaInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskRequest Clone() {
      return new TaskRequest(this);
    }

    /// <summary>Field number for the "device_info" field.</summary>
    public const int DeviceInfoFieldNumber = 1;
    private global::Com.Baidu.Zion.Proto.Lib.DeviceInfo deviceInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Baidu.Zion.Proto.Lib.DeviceInfo DeviceInfo {
      get { return deviceInfo_; }
      set {
        deviceInfo_ = value;
      }
    }

    /// <summary>Field number for the "meta_info" field.</summary>
    public const int MetaInfoFieldNumber = 2;
    private global::Com.Baidu.Zion.Proto.Lib.MetaInfo metaInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Baidu.Zion.Proto.Lib.MetaInfo MetaInfo {
      get { return metaInfo_; }
      set {
        metaInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DeviceInfo, other.DeviceInfo)) return false;
      if (!object.Equals(MetaInfo, other.MetaInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (deviceInfo_ != null) hash ^= DeviceInfo.GetHashCode();
      if (metaInfo_ != null) hash ^= MetaInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (deviceInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeviceInfo);
      }
      if (metaInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MetaInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (deviceInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeviceInfo);
      }
      if (metaInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MetaInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (deviceInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceInfo);
      }
      if (metaInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetaInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskRequest other) {
      if (other == null) {
        return;
      }
      if (other.deviceInfo_ != null) {
        if (deviceInfo_ == null) {
          DeviceInfo = new global::Com.Baidu.Zion.Proto.Lib.DeviceInfo();
        }
        DeviceInfo.MergeFrom(other.DeviceInfo);
      }
      if (other.metaInfo_ != null) {
        if (metaInfo_ == null) {
          MetaInfo = new global::Com.Baidu.Zion.Proto.Lib.MetaInfo();
        }
        MetaInfo.MergeFrom(other.MetaInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::Com.Baidu.Zion.Proto.Lib.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
          case 18: {
            if (metaInfo_ == null) {
              MetaInfo = new global::Com.Baidu.Zion.Proto.Lib.MetaInfo();
            }
            input.ReadMessage(MetaInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (deviceInfo_ == null) {
              DeviceInfo = new global::Com.Baidu.Zion.Proto.Lib.DeviceInfo();
            }
            input.ReadMessage(DeviceInfo);
            break;
          }
          case 18: {
            if (metaInfo_ == null) {
              MetaInfo = new global::Com.Baidu.Zion.Proto.Lib.MetaInfo();
            }
            input.ReadMessage(MetaInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response message
  /// </summary>
  public sealed partial class TaskResponse : pb::IMessage<TaskResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskResponse> _parser = new pb::MessageParser<TaskResponse>(() => new TaskResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Baidu.Zion.Proto.Lib.ConnectServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskResponse(TaskResponse other) : this() {
      result_ = other.result_;
      resId_ = other.resId_;
      taskInfo_ = other.taskInfo_ != null ? other.taskInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskResponse Clone() {
      return new TaskResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private readonly static string ResultDefaultValue = "";

    private string result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_ ?? ResultDefaultValue; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "result" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResult {
      get { return result_ != null; }
    }
    /// <summary>Clears the value of the "result" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResult() {
      result_ = null;
    }

    /// <summary>Field number for the "res_id" field.</summary>
    public const int ResIdFieldNumber = 2;
    private readonly static string ResIdDefaultValue = "";

    private string resId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResId {
      get { return resId_ ?? ResIdDefaultValue; }
      set {
        resId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "res_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HasResId {
      get { return resId_ != null; }
    }
    /// <summary>Clears the value of the "res_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResId() {
      resId_ = null;
    }

    /// <summary>Field number for the "task_info" field.</summary>
    public const int TaskInfoFieldNumber = 3;
    private global::Com.Baidu.Zion.Proto.Lib.TaskInfo taskInfo_;
    /// <summary>
    /// 云控信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Baidu.Zion.Proto.Lib.TaskInfo TaskInfo {
      get { return taskInfo_; }
      set {
        taskInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (ResId != other.ResId) return false;
      if (!object.Equals(TaskInfo, other.TaskInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HasResult) hash ^= Result.GetHashCode();
      if (HasResId) hash ^= ResId.GetHashCode();
      if (taskInfo_ != null) hash ^= TaskInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasResult) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (HasResId) {
        output.WriteRawTag(18);
        output.WriteString(ResId);
      }
      if (taskInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TaskInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasResult) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (HasResId) {
        output.WriteRawTag(18);
        output.WriteString(ResId);
      }
      if (taskInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TaskInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HasResult) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (HasResId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResId);
      }
      if (taskInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskResponse other) {
      if (other == null) {
        return;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      if (other.HasResId) {
        ResId = other.ResId;
      }
      if (other.taskInfo_ != null) {
        if (taskInfo_ == null) {
          TaskInfo = new global::Com.Baidu.Zion.Proto.Lib.TaskInfo();
        }
        TaskInfo.MergeFrom(other.TaskInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
          case 18: {
            ResId = input.ReadString();
            break;
          }
          case 26: {
            if (taskInfo_ == null) {
              TaskInfo = new global::Com.Baidu.Zion.Proto.Lib.TaskInfo();
            }
            input.ReadMessage(TaskInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
          case 18: {
            ResId = input.ReadString();
            break;
          }
          case 26: {
            if (taskInfo_ == null) {
              TaskInfo = new global::Com.Baidu.Zion.Proto.Lib.TaskInfo();
            }
            input.ReadMessage(TaskInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
